name: Update pbctl Formula

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for new release
        id: check
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/hakonharnes/pbctl/releases/latest | jq -r .tag_name)
          echo "Latest version: $LATEST_VERSION"

          CURRENT_VERSION=$(grep -oP 'v\d+\.\d+\.\d+' Formula/pbctl.rb | head -1)
          echo "Current version: $CURRENT_VERSION"

          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          else
            echo "updated=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Update formula
        if: steps.check.outputs.updated == 'true'
        run: |
          VERSION="${{ steps.check.outputs.version }}"
          VERSION_NO_V=${VERSION#v}

          curl -L "https://github.com/hakonharnes/pbctl/archive/refs/tags/${VERSION}.tar.gz" -o pbctl.tar.gz
          SHA256=$(sha256sum pbctl.tar.gz | cut -d' ' -f1)

          sed -i "s|archive/refs/tags/v[0-9.]*\.tar\.gz|archive/refs/tags/${VERSION}.tar.gz|" Formula/pbctl.rb
          sed -i "s|sha256   \"[a-f0-9]*\"|sha256   \"${SHA256}\"|" Formula/pbctl.rb
          sed -i "s|pbctl [0-9.]*|pbctl ${VERSION_NO_V}|" Formula/pbctl.rb

          rm pbctl.tar.gz
      
      - name: Create Pull Request
        if: steps.check.outputs.updated == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION="${{ steps.check.outputs.version }}"
          BRANCH="update-pbctl-${VERSION}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -b "${BRANCH}"
          git add Formula/pbctl.rb
          git commit -m "chore: update pbctl to ${VERSION}"
          git push -f origin "${BRANCH}"

          if gh pr list --head "${BRANCH}" --state open | grep -q .; then
            echo "PR already exists for ${BRANCH}"
          else
            gh pr create \
              --title "Update pbctl to ${VERSION}" \
              --body "This PR updates pbctl to version ${VERSION}" \
              --base main \
              --head "${BRANCH}"
          fi
